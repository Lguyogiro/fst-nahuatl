define Cons [b | c | c h | d | f | g | h | j | k | l | m | n | p | q | r | s | t | v | x | z ] ;
define Vowels [a | e | i | o | u ] ;

define SuffixFlags ["@U.suff.li@" | "@U.suff.tli@" | "@U.suff.other@" | "@U.suff.tl@"] ;
define PossFlags ["@U.pos.1SG@" | "@U.pos.2SG@" | "@U.pos.3SG@" | "@U.pos.ON@"] ;

define AllFlagDiacritics ["@U.pos.1SG@" | "@U.pos.2SG@" | "@U.pos.3SG@" | "@U.pos.ON@" | "@U.pos.OFF@" | "@U.suff.li@" | "@U.suff.tli@" | "@U.suff.other@" | "@U.suff.tl@" | "@U.PlSubj.ON@" | "@U.PlSubj.OFF@" | "@U.Past.ON@" | "@U.Past.OFF@" | "@U.Trans.ON@" | "@U.Trans.OFF@" | "@P.2ndPersAddr.ON@" | "@R.2ndPersAddr.ON@" | "@D.2ndPersAddr.ON@" | "@P.Reflexive.ON@" | "@R.Reflexive@"] ;

define FlagMarkers ["@P.Hon.ON@"] ;

!
! NNC Rules
!
define NasalAssimilation n -> 0 || _ SuffixFlags "@U.pos.OFF@" "^" m ;
define DeleteIAfterReflexiveO i -> 0 || o "^" SuffixFlags _ Cons Cons ;
define Nelision n -> 0 || _ "@U.pos.ON@" "^" h u a n ;
define PossessiveNasalAssimilation m -> n || "@U.pos.ON@" i _ "^" SuffixFlags [c | t | n | s | y] ;
define PossVEnding a -> a u h, o -> o u h, i -> i u h, e -> e u h || _ PossFlags "^" 0 .#. ;
define WrewritePt1 W -> u h  || _ AllFlagDiacritics*  "^" .#. ;
define WrewritePt2 W -> h u i || _ AllFlagDiacritics* "^" t l .#. ;

!
! VNC Rules
!
define SubjIEpenthesis n -> n i, t -> t i || [ "@U.PlSubj.ON@" | "@U.PlSubj.OFF@" | "@P.2ndPersAddr.ON@" ] _ "^" AllFlagDiacritics* [Cons|K] ;
define ObjIEpenthesis K -> K i || [ .#. | Cons ] AllFlagDiacritics* _ "^" AllFlagDiacritics* Cons ;
define HonorificVowelHarmony i -> o || [n|t] _  "^" AllFlagDiacritics* "@P.Hon.ON@" o n ;
define ODegemination o -> 0 || o "^" [ AllFlagDiacritics | FlagMarkers ]* _ n ;
define KDegemination1 K -> 0 || [K|c|q] [ AllFlagDiacritics | FlagMarkers | "^" ]* _ ;
define KDegemination2 K -> 0 || _ [ AllFlagDiacritics | FlagMarkers | "^" ]* [K|c|q] ;
define StoZRewrite s -> z || _ AllFlagDiacritics* [ Cons | a | o | .#. ] ;
define StoCRewrite s -> c ;
define PluralEndingPt1 P L -> h || a "^" AllFlagDiacritics* _ .#.;
define PluralEndingPt2 P L -> h u a || o "^" AllFlagDiacritics* _ .#.;
define PluralEndingPt3 i -> e || _ "^" AllFlagDiacritics* P L .#.;
define PluralEndingPt4 P L -> 0 || _ .#.;

define NasalAssimilation m -> n || _ "^" AllFlagDiacritics* [K|t|n] ;
define KElision K -> 0 || Cons "^" AllFlagDiacritics* _ .#. ;
define KtoQui K -> q u || _  ("^") AllFlagDiacritics* [i|e] ;
define KtoC K -> c ;
define IhToEPreterite i h -> e || _ "^" AllFlagDiacritics* .#. ;
define Cleanup "^" -> 0 ;

read lexc nhi_vnc.lexc
define Lexicon;

define Grammar Lexicon                      .o.
               SubjIEpenthesis              .o.
               ObjIEpenthesis               .o.
               HonorificVowelHarmony        .o.
               ODegemination                .o.
               KDegemination1               .o.
               KDegemination2               .o.
               StoZRewrite                  .o.
               PluralEndingPt1              .o.
               PluralEndingPt2              .o.
               PluralEndingPt3              .o.
               PluralEndingPt4              .o.
               NasalAssimilation            .o.
               KElision                     .o.
               IhToEPreterite               .o.
               KtoQui                       .o.
               KtoC                         .o.
               Cleanup ;


!
! The following rule sequence is used for NNCs
!
!define Grammar Lexicon                     .o.
!               DeleteIAfterReflexiveO      .o.
!               NasalAssimilation           .o.
!               PossessiveNasalAssimilation .o.
!               PossVEnding                 .o.
!               Nelision                    .o.
!               WrewritePt1                 .o.
!               WrewritePt2                 .o.
!               Cleanup ;

regex Grammar;

